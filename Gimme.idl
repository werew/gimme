module Gimme
{
  struct GameInfos
  {
    boolean taketurns ;
    boolean running ;
  } ;

  struct Resource
  {
    string type;
    long amount;
  } ;

  struct Registration
  {
    boolean logged;
    string id;
    string msg;
  } ;

  struct Transaction 
  {
    string id;
    long long timestamp;
    string from;
    string to;
    Resource what;
  } ;
    
  
  interface Agent
  {
    Resource getResource(in Resource request) ;
    void logmsg(in string msg, in long type);
  } ; 

  interface Producer : Agent
  {
    Resource queryResource() ;
  } ;


  interface Consumer : Agent
  {
    typedef sequence<Producer> TabProd;
    typedef sequence<Consumer> TabCons;

    oneway void start() ;
    boolean playTurn() ;
    void feed(in TabProd p, in TabCons c) ;
  } ;


  interface Coordinator
  {
    Registration loginConsumer(in Consumer c, in string id) ;
    Registration loginProducer(in Producer p, in string id) ;
    GameInfos getGameInfos();
  } ;

} ;
