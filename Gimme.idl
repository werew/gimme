module Gimme
{
  struct GameInfos
  {
    boolean taketurns ;
    boolean running ;
  } ;

  struct Resource
  {
    string type;
    long amount;
  } ;

  
  interface Agent
  {
  // TODO insert common methods here
    void logmsg(in string msg, in long type);
  } ; 

  interface Producer : Agent
  {
    Resource getResource(in Resource request) ;
    Resource queryResource() ;
  } ;


  interface Consumer : Agent
  {
  typedef sequence<Producer> TabProd;
  typedef sequence<Consumer> TabCons;
    oneway void start() ;
    void feed(in TabProd p, in TabCons c) ;
  } ;


  interface Coordinator
  {
    long loginConsumer(in Consumer c) ;
    long loginProducer(in Producer p) ;
    GameInfos getGameInfos();
  } ;

} ;
